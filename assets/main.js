// --- FUN칂츾O M츼QUINA DE ESCREVER (DESTAQUE EM TEMPO REAL) ---
function startTypingEffect() {
    const textElement = document.getElementById('typing-text');
    if (!textElement) return;

    // 1. DEFINI칂츾O DO TEXTO E POSI칂칏ES
    const fullText = "Transform Data Overload into Actionable Intelligence.";
    const highlightTarget = "Actionable Intelligence.";
    
    // Calcula a posi칞칚o de in칤cio
    const highlightStart = fullText.indexOf(highlightTarget); 

    const typingSpeed = 50; 
    let index = 0;
    
    // Garante que o texto comece vazio
    textElement.textContent = ''; 

    function type() {
        if (index < fullText.length) {
            
            let currentContent = '';
            
            // 1. L칩gica para texto antes e durante o destaque
            if (index < highlightStart) {
                // Digita o texto normal
                currentContent = fullText.substring(0, index + 1);
            } else {
                // Se o 칤ndice alcan칞ou ou ultrapassou o ponto de destaque:
                
                // Pega a parte normal (que n칚o 칠 destaque)
                let normalPart = fullText.substring(0, highlightStart);
                
                // Pega a parte que ser치 digitada DENTRO do destaque Ciano
                let highlightedPart = fullText.substring(highlightStart, index + 1);
                
                // Constr칩i o HTML: Parte Normal + <span Ciano> + Parte Ciano Digitada + Cursor
                currentContent = normalPart + '<span class="highlight">' + highlightedPart + '</span>';
            }

            // 2. ATUALIZA O CONTE칔DO (CR칈TICO: Usa innerHTML)
            textElement.innerHTML = currentContent;
            
            index++;
            setTimeout(type, typingSpeed);
            
        } else {
            // P칍S-DIGITA칂츾O: Garante que o HTML finalize e remove o cursor
            
            let finalHTML = fullText.replace(highlightTarget, '<span class="highlight">' + highlightTarget + '</span>');
            textElement.innerHTML = finalHTML;
            
            textElement.classList.remove('typing-effect');
        }
    }
    
    // Inicia o processo
    type();
}


document.addEventListener('DOMContentLoaded', (event) => {
    
    // --- 1. FUN칂츾O: PROGRESSIVE LOADING (Corre칞칚o de Timing para Fluidez) ---
    // --- 1. FUN칂츾O: PROGRESSIVE LOADING (Corre칞칚o de Fluidez Definitiva) ---
const elementsToAnimate = document.querySelectorAll('.hidden-element');

// Define um atraso de 800 milissegundos (0.8s) para dar foco ao Hero
setTimeout(() => {
    elementsToAnimate.forEach((element, index) => {
        element.style.transitionDelay = `${index * 0.1}s`; 
        
        // 游눤 CORRE칂츾O CR칈TICA: For칞ar o Rec치lculo do CSS (Flushing) 游눤
        // Isso garante que o navegador reconhe칞a o 'opacity: 0' antes de remover a classe.
        void element.offsetWidth; 

        // 2. Remove a classe para iniciar a transi칞칚o suave
        element.classList.remove('hidden-element');
        element.classList.add('visible-element');
    });
}, 800); 

// ... (O restante do seu c칩digo JavaScript abaixo, como o startTypingEffect, permanece inalterado) ...
    
    // --- 2. FUN칂츾O: M츼QUINA DE ESCREVER (Typing Effect) ---
    // (Mantenha sua fun칞칚o startTypingEffect intacta aqui)
    // ...
    
    // INICIA O EFEITO DE DIGITA칂츾O
    startTypingEffect();
});